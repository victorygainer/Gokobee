<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gokobee.dao.MybatisDAO">
<!-- 
	실행할 sql 명령이 저장된 xml 파일의 namespace에는 반드시 풀패키지 이름과 함께 적어야 한다.
 -->

<insert id="reservationOK" parameterType="ro">
 insert into reservation (reservationNum, userID, contentNum,
  contentOwner, dateChoose, memberChoose, totalPrice)
     values (reservation_seq.nextval, #{userID},
      #{contentNum}, #{contentOwner}, #{dateChoose}, #{memberChoose}, #{totalPrice})
</insert>

<!-- 
myContentResList 넣을 내용 
reservationNum, reservationDate, 예약 상태(아직 없음)
contentName, totalPrice
dateChoose, userID 
 -->
 
<select id="myContentResList" parameterType="String" resultType="ro">
 select 
    r.reservationNum, r.reservationDate, r.userID,
    r.dateChoose, r.memberChoose, r.totalPrice,
    c.contentName, c.contentThumbImg, c.contentSum,
    c.contentNum, c.cateCode, c.contentOwner
  from reservation r
    inner join content c
        on r.contentNum = c.contentNum
  where r.contentOwner = #{contentOwner}
        and c.contentOwner = #{contentOwner}
</select>

<select id="myOrderList" parameterType="String" resultType="ro">
 select 
    r.reservationNum, r.reservationDate, r.userID,
    r.dateChoose, r.memberChoose, r.totalPrice,
    c.contentName, c.contentThumbImg, c.contentSum,
    c.contentNum, c.cateCode, c.contentOwner
  from reservation r
    inner join content c
        on r.contentNum = c.contentNum
  where r.userID = #{userID}
</select>

</mapper>














